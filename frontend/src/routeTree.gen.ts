/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GameRouteImport } from './routes/game/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as homeRouteImport } from './routes/(home)/route'
import { Route as GameIndexImport } from './routes/game/index'
import { Route as CreateHeroIndexImport } from './routes/create-hero/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as homeIndexImport } from './routes/(home)/index'
import { Route as AuthSignUpImport } from './routes/auth/sign-up'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AuthConfirmEmailImport } from './routes/auth/confirm-email'
import { Route as GameShopIndexImport } from './routes/game/shop/index'
import { Route as homePostIndexImport } from './routes/(home)/post/index'
import { Route as homePostPostIdImport } from './routes/(home)/post/$postId'

// Create/Update Routes

const GameRouteRoute = GameRouteImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const homeRouteRoute = homeRouteImport.update({
  id: '/(home)',
  getParentRoute: () => rootRoute,
} as any)

const GameIndexRoute = GameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GameRouteRoute,
} as any)

const CreateHeroIndexRoute = CreateHeroIndexImport.update({
  id: '/create-hero/',
  path: '/create-hero/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const homeIndexRoute = homeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => homeRouteRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthConfirmEmailRoute = AuthConfirmEmailImport.update({
  id: '/confirm-email',
  path: '/confirm-email',
  getParentRoute: () => AuthRouteRoute,
} as any)

const GameShopIndexRoute = GameShopIndexImport.update({
  id: '/shop/',
  path: '/shop/',
  getParentRoute: () => GameRouteRoute,
} as any)

const homePostIndexRoute = homePostIndexImport.update({
  id: '/post/',
  path: '/post/',
  getParentRoute: () => homeRouteRoute,
} as any)

const homePostPostIdRoute = homePostPostIdImport.update({
  id: '/post/$postId',
  path: '/post/$postId',
  getParentRoute: () => homeRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(home)': {
      id: '/(home)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/confirm-email': {
      id: '/auth/confirm-email'
      path: '/confirm-email'
      fullPath: '/auth/confirm-email'
      preLoaderRoute: typeof AuthConfirmEmailImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof AuthRouteImport
    }
    '/(home)/': {
      id: '/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeIndexImport
      parentRoute: typeof homeRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/create-hero/': {
      id: '/create-hero/'
      path: '/create-hero'
      fullPath: '/create-hero'
      preLoaderRoute: typeof CreateHeroIndexImport
      parentRoute: typeof rootRoute
    }
    '/game/': {
      id: '/game/'
      path: '/'
      fullPath: '/game/'
      preLoaderRoute: typeof GameIndexImport
      parentRoute: typeof GameRouteImport
    }
    '/(home)/post/$postId': {
      id: '/(home)/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof homePostPostIdImport
      parentRoute: typeof homeRouteImport
    }
    '/(home)/post/': {
      id: '/(home)/post/'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof homePostIndexImport
      parentRoute: typeof homeRouteImport
    }
    '/game/shop/': {
      id: '/game/shop/'
      path: '/shop'
      fullPath: '/game/shop'
      preLoaderRoute: typeof GameShopIndexImport
      parentRoute: typeof GameRouteImport
    }
  }
}

// Create and export the route tree

interface homeRouteRouteChildren {
  homeIndexRoute: typeof homeIndexRoute
  homePostPostIdRoute: typeof homePostPostIdRoute
  homePostIndexRoute: typeof homePostIndexRoute
}

const homeRouteRouteChildren: homeRouteRouteChildren = {
  homeIndexRoute: homeIndexRoute,
  homePostPostIdRoute: homePostPostIdRoute,
  homePostIndexRoute: homePostIndexRoute,
}

const homeRouteRouteWithChildren = homeRouteRoute._addFileChildren(
  homeRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthConfirmEmailRoute: typeof AuthConfirmEmailRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthConfirmEmailRoute: AuthConfirmEmailRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface GameRouteRouteChildren {
  GameIndexRoute: typeof GameIndexRoute
  GameShopIndexRoute: typeof GameShopIndexRoute
}

const GameRouteRouteChildren: GameRouteRouteChildren = {
  GameIndexRoute: GameIndexRoute,
  GameShopIndexRoute: GameShopIndexRoute,
}

const GameRouteRouteWithChildren = GameRouteRoute._addFileChildren(
  GameRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof homeIndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/game': typeof GameRouteRouteWithChildren
  '/auth/confirm-email': typeof AuthConfirmEmailRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/': typeof AuthIndexRoute
  '/create-hero': typeof CreateHeroIndexRoute
  '/game/': typeof GameIndexRoute
  '/post/$postId': typeof homePostPostIdRoute
  '/post': typeof homePostIndexRoute
  '/game/shop': typeof GameShopIndexRoute
}

export interface FileRoutesByTo {
  '/auth/confirm-email': typeof AuthConfirmEmailRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof homeIndexRoute
  '/auth': typeof AuthIndexRoute
  '/create-hero': typeof CreateHeroIndexRoute
  '/game': typeof GameIndexRoute
  '/post/$postId': typeof homePostPostIdRoute
  '/post': typeof homePostIndexRoute
  '/game/shop': typeof GameShopIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(home)': typeof homeRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/game': typeof GameRouteRouteWithChildren
  '/auth/confirm-email': typeof AuthConfirmEmailRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/(home)/': typeof homeIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/create-hero/': typeof CreateHeroIndexRoute
  '/game/': typeof GameIndexRoute
  '/(home)/post/$postId': typeof homePostPostIdRoute
  '/(home)/post/': typeof homePostIndexRoute
  '/game/shop/': typeof GameShopIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/game'
    | '/auth/confirm-email'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/'
    | '/create-hero'
    | '/game/'
    | '/post/$postId'
    | '/post'
    | '/game/shop'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/confirm-email'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/'
    | '/auth'
    | '/create-hero'
    | '/game'
    | '/post/$postId'
    | '/post'
    | '/game/shop'
  id:
    | '__root__'
    | '/(home)'
    | '/auth'
    | '/game'
    | '/auth/confirm-email'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/(home)/'
    | '/auth/'
    | '/create-hero/'
    | '/game/'
    | '/(home)/post/$postId'
    | '/(home)/post/'
    | '/game/shop/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  homeRouteRoute: typeof homeRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  GameRouteRoute: typeof GameRouteRouteWithChildren
  CreateHeroIndexRoute: typeof CreateHeroIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  homeRouteRoute: homeRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  GameRouteRoute: GameRouteRouteWithChildren,
  CreateHeroIndexRoute: CreateHeroIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(home)",
        "/auth",
        "/game",
        "/create-hero/"
      ]
    },
    "/(home)": {
      "filePath": "(home)/route.tsx",
      "children": [
        "/(home)/",
        "/(home)/post/$postId",
        "/(home)/post/"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/confirm-email",
        "/auth/sign-in",
        "/auth/sign-up",
        "/auth/"
      ]
    },
    "/game": {
      "filePath": "game/route.tsx",
      "children": [
        "/game/",
        "/game/shop/"
      ]
    },
    "/auth/confirm-email": {
      "filePath": "auth/confirm-email.tsx",
      "parent": "/auth"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx",
      "parent": "/auth"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx",
      "parent": "/auth"
    },
    "/(home)/": {
      "filePath": "(home)/index.tsx",
      "parent": "/(home)"
    },
    "/auth/": {
      "filePath": "auth/index.tsx",
      "parent": "/auth"
    },
    "/create-hero/": {
      "filePath": "create-hero/index.tsx"
    },
    "/game/": {
      "filePath": "game/index.tsx",
      "parent": "/game"
    },
    "/(home)/post/$postId": {
      "filePath": "(home)/post/$postId.tsx",
      "parent": "/(home)"
    },
    "/(home)/post/": {
      "filePath": "(home)/post/index.tsx",
      "parent": "/(home)"
    },
    "/game/shop/": {
      "filePath": "game/shop/index.tsx",
      "parent": "/game"
    }
  }
}
ROUTE_MANIFEST_END */
